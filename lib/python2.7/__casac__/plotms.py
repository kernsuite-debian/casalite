# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_plotms')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_plotms')
    _plotms = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_plotms', [dirname(__file__)])
        except ImportError:
            import _plotms
            return _plotms
        if fp is not None:
            try:
                _mod = imp.load_module('_plotms', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _plotms = swig_import_helper()
    del swig_import_helper
else:
    import _plotms
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class plotms(_object):
    """Proxy of C++ casac::plotms class."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, plotms, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, plotms, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _plotms.delete_plotms
    __del__ = lambda self: None

    def __init__(self):
        """__init__(self) -> plotms"""
        this = _plotms.new_plotms()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def setLogFilename(self, *args, **kwargs):
        """
        setLogFilename(self, logFilename)



        Summary
        	Sets the log filename to be used by plotms.

        Description


        Input Parameters:
        	logFilename	 log filename for plotms to use casapy.log 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setLogFilename(self, *args, **kwargs)


    def getLogFilename(self):
        """
        getLogFilename(self) -> string



        Summary
        	Gets the log filename used by plotms.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getLogFilename(self)


    def setLogFilter(self, priority):
        """
        setLogFilter(self, priority)



        Summary
        	Sets the log's priority filter.

        Description


        Input Parameters:
        	priority	 string representation of minimum priority 

        Example:


        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setLogFilter(self, priority)


    def getLogFilter(self):
        """
        getLogFilter(self) -> string



        Summary
        	Gets the log's priority filter.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getLogFilter(self)


    def setPlotMSPid(self, pid):
        """
        setPlotMSPid(self, pid)



        Summary
        	Connect dbus to existing plotms process ID.

        Description


        Input Parameters:
        	pid		 plotms process ID to use 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSPid(self, pid)


    def getPlotMSPid(self):
        """
        getPlotMSPid(self) -> int



        Summary
        	Get the process ID of attached plotms process.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSPid(self)


    def setClearSelectionOnAxesChange(self, clearSelection):
        """
        setClearSelectionOnAxesChange(self, clearSelection)



        Summary
        	Sets whether any selections are cleared on an axes change or not.

        Description


        Input Parameters:
        	clearSelection	 clear selection flag 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setClearSelectionOnAxesChange(self, clearSelection)


    def getClearSelectionOnAxesChange(self):
        """
        getClearSelectionOnAxesChange(self) -> bool



        Summary
        	Gets whether any selections are cleared on an axes change or not.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getClearSelectionOnAxesChange(self)


    def setCachedImageSize(self, width, height):
        """
        setCachedImageSize(self, width, height)



        Summary
        	Sets the size for the cached images.

        Description


        Input Parameters:
        	width		 width of the cached images 
        	height		 height of the cached images 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setCachedImageSize(self, width, height)


    def setCachedImageSizeToScreenResolution(self):
        """
        setCachedImageSizeToScreenResolution(self)



        Summary
        	Sets the size for the cached images to the current screen resolution.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setCachedImageSizeToScreenResolution(self)


    def getCachedImageWidth(self):
        """
        getCachedImageWidth(self) -> int



        Summary
        	Gets the width of the cached images.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getCachedImageWidth(self)


    def getCachedImageHeight(self):
        """
        getCachedImageHeight(self) -> int



        Summary
        	Gets the height of the cached images.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getCachedImageHeight(self)


    def setGridSize(self, rowCount=1, colCount=1):
        """
        setGridSize(self, rowCount=1, colCount=1)



        Summary
        	Sets the number of rows and columns in multiple plot displays.

        Description


        Input Parameters:
        	rowCount	 The number of rows in a multiple plot display. 1 
        	colCount	 The number of columns in a multiple plot display. 1 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setGridSize(self, rowCount, colCount)


    def setPlotMSFilename(self, msFilename, updateImmediately=True, plotIndex=0):
        """
        setPlotMSFilename(self, msFilename, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS filename to the given.

        Description

        Sets the MS filename for the plot at the given index.  If updateImmediately is
        true, this change takes effect immediately IF the plotms window is currently
        shown; otherwise it will only be applied next time update() and/or show() is
        called.


        Input Parameters:
        	msFilename	 MS filename to be plotted 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSFilename(self, msFilename, updateImmediately, plotIndex)


    def getPlotMSFilename(self, plotIndex=0):
        """
        getPlotMSFilename(self, plotIndex=0) -> string



        Summary
        	Gets the MS filename.

        Description

        Gets the MS filename for the plot at the given index.


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSFilename(self, plotIndex)


    def setcallib(self, callib, updateImmediately=True, plotIndex=0):
        """
        setcallib(self, callib, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the calibration parameters.

        Description

        Sets the calibration parameters for the plot at the given index, using a
        string or filename.  If updateImmediately is true, this change takes effect
        immediately IF the plotms window is currently shown; otherwise it will only be
        applied next time update() and/or show() is called.


        Input Parameters:
        	callib		 calibration parameters, as a string or filename 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setcallib(self, callib, updateImmediately, plotIndex)


    def setPlotMSSelection(self, *args, **kwargs):
        """
        setPlotMSSelection(self, field, spw, timerange, uvrange, antenna, scan, corr, array, observation, intent, feed, msselect, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS selection parameters.

        Description

        Sets the MS selection parameters for the plot at the given index, using
        individual string values.  If updateImmediately is true, this change takes
        effect immediately IF the plotms window is currently shown; otherwise it will
        only be applied next time update() and/or show() is called.


        Input Parameters:
        	field		 MS selection parameter for field 
        	spw		 MS selection parameter for spw 
        	timerange	 MS selection parameter for timerange 
        	uvrange		 MS selection parameter for uvrange 
        	antenna		 MS selection parameter for antenna 
        	scan		 MS selection parameter for scan 
        	corr		 MS selection parameter for corr 
        	array		 MS selection parameter for array 
        	observation	 MS selection parameter for obsID 
        	intent		 MS selection parameter for intent 
        	feed		 MS selection parameter for feed 
        	msselect	 MS selection parameter for msselect 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSSelection(self, *args, **kwargs)


    def setPlotMSSelectionRec(self, selection, updateImmediately=True, plotIndex=0):
        """
        setPlotMSSelectionRec(self, selection, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS selection parameters.

        Description

        Sets the MS selection parameters for the plot at the given index, using a
        record (see PlotMSSelection::toRecord()).  If updateImmediately is true, this
        change takes effect immediately IF the plotms window is currently shown;
        otherwise it will only be applied next time update() and/or show() is called.


        Input Parameters:
        	selection	 MS selection parameters, in record form 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSSelectionRec(self, selection, updateImmediately, plotIndex)


    def getPlotMSSelection(self, plotIndex=0):
        """
        getPlotMSSelection(self, plotIndex=0) -> record *



        Summary
        	Gets the MS selection parameters.

        Description

        Gets the MS selection parameters for the plot at the given index as a record
        (see PlotMSSelection::toRecord()).


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSSelection(self, plotIndex)


    def setPlotMSAveraging(self, *args, **kwargs):
        """
        setPlotMSAveraging(self, channel, time, scan=False, field=False, baseline=False, antenna=False, spw=False, scalar=False, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS averaging parameters.

        Description

        Sets the MS averaging parameters for the plot at the given index, using
        individual flags and values.  Baseline and antenna averaging are mutually
        exclusive; only one (or none) can be true at the same time.  If
        updateImmediately is true, this change takes effect immediately IF the plotms
        window is currently shown; otherwise it will only be applied next time update()
        and/or show() is called.


        Input Parameters:
        	channel		 channel averaging; either blank or a channel value 
        	time		 time averaging; either blank or a value in seconds 
        	scan		 scan averaging (only valid if time averaging is on) false 
        	field		 field averaging (only valid if time averaging is on) false 
        	baseline	 baseline averaging, mutually exclusive with antenna false 
        	antenna		 antenna averaging, mutually exclusive with baseline false 
        	spw		 spw averaging false 
        	scalar		 Do scalar averaging instead of vector averaging false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSAveraging(self, *args, **kwargs)


    def setPlotMSAveragingRec(self, averaging, updateImmediately=True, plotIndex=0):
        """
        setPlotMSAveragingRec(self, averaging, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS averaging parameters.

        Description

        Sets the MS averaging parameters for the plot at the given index, using a
        record (see PlotMSAveraging::toRecord()).  If updateImmediately is true, this
        change takes effect immediately IF the plotms window is currently shown;
        otherwise it will only be applied next time update() and/or show() is called.


        Input Parameters:
        	averaging	 MS averaging parameters, in record form 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSAveragingRec(self, averaging, updateImmediately, plotIndex)


    def getPlotMSAveraging(self, plotIndex=0):
        """
        getPlotMSAveraging(self, plotIndex=0) -> record *



        Summary
        	Gets the MS averaging parameters.

        Description

        Gets the MS averaging parameters for the plot at the given index as a record
        (see PlotMSAveraging::toRecord()).


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSAveraging(self, plotIndex)


    def setPlotMSTransformations(self, *args, **kwargs):
        """
        setPlotMSTransformations(self, freqframe, veldef, restfreq, xshift=0.0, yshift=0.0, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS transformation parameters.

        Description

        Sets the MS transformation parameters for the plot at the given index, using
        individual values.  Supported transformations currently include frequency
        frame choices (LSRK,LSRD,BARY,GEO,TOPO,GALACTO,LGROUP,CMB), velocity definition choices (RADIO,
        OPTICAL,TRUE) and rest frequency, and approximate phase center shift.  If
        updateImmediately is true, this change takes effect immediately IF the plotms
        window is currently shown; otherwise it will only be applied next time update()
        and/or show() is called.


        Input Parameters:
        	freqframe	 Frequency frame in which to render frequencies and velocities 
        	veldef		 Velocity definition in which to render velocities 
        	restfreq	 Rest frequency (w/ units) to use when calculating velocities 
        	xshift		 Phase center shift in horizontal direction (arcsec) 0.0 
        	yshift		 Phase center shift in vertical direction (arcsec) 0.0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSTransformations(self, *args, **kwargs)


    def setPlotMSCalibration(self, *args, **kwargs):
        """
        setPlotMSCalibration(self, use=False, callibrary, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS calibration parameters.

        Description

        Sets the MS calibration parameters for the plot at the given index, using
        individual values.  These parameters may be in a string or a file.
        If updateImmediately is true, this change takes effect immediately IF
        the plotms window is currently shown; otherwise it will only be applied next
        time update() and/or show() is called.


        Input Parameters:
        	use		 Indicates whether to use a calibration library for on-the-fly calibration. false 
        	callibrary	 Calibration Library as a string or filename 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSCalibration(self, *args, **kwargs)


    def setPlotMSIterate(self, *args, **kwargs):
        """
        setPlotMSIterate(self, iteraxis, rowIndex=0, colIndex=0, xselfscale=False, yselfscale=False, commonAxisX=False, commonAxisY=False, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the iteration parameters.

        Description

        Sets which meta-information axis over which to iterate the plots
        (scan, field, spw, baseline, antenna), and whether to self-scale 
        the axes of each plot or scale them globally.  (TBD: support for 
        specifying multiple plots per page will be added here)


        Input Parameters:
        	iteraxis	 Axis over which to iterate (or none) 
        	rowIndex	 Row location of the plot (0-based, default=0). 0 
        	colIndex	 Column location of the plot (0-based, default=0) 0 
        	xselfscale	 When true, iterated plots have a common x-axis range (scale). false 
        	yselfscale	 When true, iterated plots have a common y-axis range (scale). false 
        	commonAxisX	 Iterated plots on a grid share a common external x-axis per column. Must also set xselfscale=True and gridrows>1. false 
        	commonAxisY	 Iterated plots on a grid share a common external y-axis per row. Must also set yselfscale=True and gridcols>1. false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSIterate(self, *args, **kwargs)


    def setPlotMSTransformationsRec(self, transformations, updateImmediately=True, plotIndex=0):
        """
        setPlotMSTransformationsRec(self, transformations, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the MS transformations parameters.

        Description

        Sets the MS transformations parameters for the plot at the given index, using a
        record (see PlotMSTransformations::toRecord()).  If updateImmediately is true, this
        change takes effect immediately IF the plotms window is currently shown;
        otherwise it will only be applied next time update() and/or show() is called.


        Input Parameters:
        	transformations	 MS transformations parameters, in record form 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSTransformationsRec(self, transformations, updateImmediately, plotIndex)


    def getPlotMSTransformations(self, plotIndex=0):
        """
        getPlotMSTransformations(self, plotIndex=0) -> record *



        Summary
        	Gets the MS transformations parameters.

        Description

        Gets the MS transformations parameters for the plot at the given index as a record
        (see PlotMSTransformations::toRecord()).


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSTransformations(self, plotIndex)


    def getPlotMSCalibration(self, plotIndex=0):
        """
        getPlotMSCalibration(self, plotIndex=0) -> record *



        Summary
        	Gets the MS calibration parameters.

        Description

        Gets the MS calibration parameters for the plot at the given index as a record
        (see PlotMSCalibration::toRecord()).


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotMSCalibration(self, plotIndex)


    def setExportRange(self, *args, **kwargs):
        """
        setExportRange(self, range)



        Summary
        	Export all iteration plots or only the current one.

        Description

            Plot export range (for multiple page iterations): All plots or only the current one (blank).


        Input Parameters:
        	range		 Iteration plot export range: all or current(blank). 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setExportRange(self, *args, **kwargs)


    def setPlotMSPageHeaderItems(self, pageHeaderItems, updateImmediately=True, plotIndex=0):
        """
        setPlotMSPageHeaderItems(self, pageHeaderItems, updateImmediately=True, plotIndex=0)



        Summary
        	Sets page header items to the given.

        Description

        Sets page header items for the plot at the given index.  If updateImmediately is
        true, this change takes effect immediately IF the plotms window is currently
        shown; otherwise it will only be applied next time update() and/or show() is
        called.


        Input Parameters:
        	pageHeaderItems	 Comma-separated list of items to display in the page header 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotMSPageHeaderItems(self, pageHeaderItems, updateImmediately, plotIndex)


    def setTitle(self, *args, **kwargs):
        """
        setTitle(self, text, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the title for a plot

        Description


        Input Parameters:
        	text		 Title (blank for automatic, resembling [yaxis] vs. [x]) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setTitle(self, *args, **kwargs)


    def setTitleFont(self, size=0, updateImmediately=True, plotIndex=0):
        """
        setTitleFont(self, size=0, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the title font for a plot

        Description


        Input Parameters:
        	size		 Title font (0 for automatic sizing) 0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setTitleFont(self, size, updateImmediately, plotIndex)


    def setXAxisLabel(self, *args, **kwargs):
        """
        setXAxisLabel(self, text, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the text to label the horizontal axis

        Description


        Input Parameters:
        	text		 The title (blank for automatic) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setXAxisLabel(self, *args, **kwargs)


    def setXAxisFont(self, size=0, updateImmediately=True, plotIndex=0):
        """
        setXAxisFont(self, size=0, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the x-axis font for a plot

        Description


        Input Parameters:
        	size		 X-axis font (0 for automatic sizing) 0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setXAxisFont(self, size, updateImmediately, plotIndex)


    def setYAxisLabel(self, *args, **kwargs):
        """
        setYAxisLabel(self, text, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the text to label the vertical axis

        Description


        Input Parameters:
        	text		 The text (blank for automatic) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setYAxisLabel(self, *args, **kwargs)


    def setYAxisFont(self, size=0, updateImmediately=True, plotIndex=0):
        """
        setYAxisFont(self, size=0, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the y-axis font for a plot

        Description


        Input Parameters:
        	size		 Y-axis font (0 for automatic sizing) 0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setYAxisFont(self, size, updateImmediately, plotIndex)


    def getTitle(self, plotIndex=0):
        """
        getTitle(self, plotIndex=0) -> string



        Summary
        	Gets the title for the plot

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getTitle(self, plotIndex)


    def getXAxisLabel(self, plotIndex=0):
        """
        getXAxisLabel(self, plotIndex=0) -> string



        Summary
        	Gets the text for the horizontal axis

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getXAxisLabel(self, plotIndex)


    def getYAxisLabel(self, plotIndex=0):
        """
        getYAxisLabel(self, plotIndex=0) -> string



        Summary
        	Gets the text for the vertical axis

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getYAxisLabel(self, plotIndex)


    def setPlotAxes(self, *args, **kwargs):
        """
        setPlotAxes(self, xAxis, yAxis, xDataColumn, yDataColumn, xFrame, yFrame, xInterp, yInterp, yAxisLocation, updateImmediately=True, plotIndex=0, dataIndex=0)



        Summary
        	Sets the plot axes to the given.

        Description

        Sets the x and y plot axes and data columns, as Strings.  If updateImmediately
        is true, this change takes effect immediately IF the plotms window is currently
        shown; otherwise it will only be applied next time update() and/or show() is
        called.


        Input Parameters:
        	xAxis		 name of the axis choice for x (blank to keep current) 
        	yAxis		 name of the axis choice for y (blank to keep current) 
        	xDataColumn	 name of the data column to use for the x axis, if applicable (blank to keep current) 
        	yDataColumn	 name of the data column to use for the y axis, if applicable (blank to keep current) 
        	xFrame		 coordinates frame to use for the x axis, if applicable (blank to keep current) 
        	yFrame		 coordinates frame to use for the y axis, if applicable (blank to keep current) 
        	xInterp		 interpolation method to use for the x axis, if applicable (blank to keep current) 
        	yInterp		 interpolation method to use for the y axis, if applicable (blank to keep current) 
        	yAxisLocation	 whether to plot the y-data against a left or right axis (blank for default) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 
        	dataIndex	 When overplotting data, the index of the data being overplotted. 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setPlotAxes(self, *args, **kwargs)


    def getPlotXAxis(self, plotIndex=0):
        """
        getPlotXAxis(self, plotIndex=0) -> string



        Summary
        	Gets the x plot axis.

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotXAxis(self, plotIndex)


    def getPlotXDataColumn(self, plotIndex=0):
        """
        getPlotXDataColumn(self, plotIndex=0) -> string



        Summary
        	Gets the data column for the x plot axis.

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotXDataColumn(self, plotIndex)


    def getPlotYAxis(self, plotIndex=0):
        """
        getPlotYAxis(self, plotIndex=0) -> string



        Summary
        	Gets the y plot axis.

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotYAxis(self, plotIndex)


    def getPlotYDataColumn(self, plotIndex=0):
        """
        getPlotYDataColumn(self, plotIndex=0) -> string



        Summary
        	Gets the data column for the y plot axis.

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotYDataColumn(self, plotIndex)


    def getPlotParams(self, plotIndex=0):
        """
        getPlotParams(self, plotIndex=0) -> record *



        Summary
        	Returns the plot params.

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getPlotParams(self, plotIndex)


    def setXRange(self, xautorange=True, xmin=0, xmax=0, updateImmediately=True, plotIndex=0):
        """
        setXRange(self, xautorange=True, xmin=0, xmax=0, updateImmediately=True, plotIndex=0)



        Summary
        	Set X axis for auto or manual, and the min/max values of x

        Input Parameters:
        	xautorange	 Automatically determine X axrangeis range? true 
        	xmin		 Minimum value of X 0 
        	xmax		 Maximum value of X 0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setXRange(self, xautorange, xmin, xmax, updateImmediately, plotIndex)


    def setYRange(self, yautorange=True, ymin=0, ymax=0, updateImmediately=True, plotIndex=0):
        """
        setYRange(self, yautorange=True, ymin=0, ymax=0, updateImmediately=True, plotIndex=0)



        Summary
        	Set Y axis for auto or manual, and the min/max values of y

        Input Parameters:
        	yautorange	 Automatically determine X axis range? true 
        	ymin		 Minimum value of Y 0 
        	ymax		 Maximum value of Y 0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setYRange(self, yautorange, ymin, ymax, updateImmediately, plotIndex)


    def setShowCurve(self, showatm=False, showtsky=False, showimage=False, updateImmediately=True, plotIndex=0):
        """
        setShowCurve(self, showatm=False, showtsky=False, showimage=False, updateImmediately=True, plotIndex=0)



        Summary
        	Whether to overlay the atm, tsky, and image curves.

        Description

        Request that the atmospheric or sky temperature transmission curve is calculated and overplotted.  Optionally display the image sideband curve.
        If updateImmediately is true, this change takes effect immediately IF the
        plotms window is currently shown; otherwise it will only be applied next time
        update() and/or show() is called.


        Input Parameters:
        	showatm		 whether to plot atm curve false 
        	showtsky	 whether to plot tsky curve false 
        	showimage	 whether to plot image sideband curve false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setShowCurve(self, showatm, showtsky, showimage, updateImmediately, plotIndex)


    def getShowAtm(self, plotIndex=0):
        """
        getShowAtm(self, plotIndex=0) -> bool



        Summary
        	Get whether atm curve is overlaid

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getShowAtm(self, plotIndex)


    def getShowTsky(self, plotIndex=0):
        """
        getShowTsky(self, plotIndex=0) -> bool



        Summary
        	Get whether tsky curve is overlaid

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getShowTsky(self, plotIndex)


    def getShowImage(self, plotIndex=0):
        """
        getShowImage(self, plotIndex=0) -> bool



        Summary
        	Get whether image sideband curve is overlaid

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getShowImage(self, plotIndex)


    def setColorizeFlag(self, colorize, updateImmediately=True, plotIndex=0):
        """
        setColorizeFlag(self, colorize, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the plot x axis to the given.

        Description

        Sets the colorization plot axis, as Strings.  If updateImmediately is
        true, this change takes effect immediately IF the plotms window is currently
        shown; otherwise it will only be applied next time update() and/or show() is
        called.


        Input Parameters:
        	colorize	 name of the axis choice for x (blank to keep current) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setColorizeFlag(self, colorize, updateImmediately, plotIndex)


    def getColorizeFlag(self, plotIndex=0):
        """
        getColorizeFlag(self, plotIndex=0) -> bool



        Summary
        	Get colorization flag

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getColorizeFlag(self, plotIndex)


    def setColorAxis(self, coloraxis, updateImmediately=True, plotIndex=0):
        """
        setColorAxis(self, coloraxis, updateImmediately=True, plotIndex=0)



        Summary
        	Sets the plot x axis to the given.

        Description

        Sets the colorization plot axis, as Strings.  If updateImmediately is
        true, this change takes effect immediately IF the plotms window is currently
        shown; otherwise it will only be applied next time update() and/or show() is
        called.


        Input Parameters:
        	coloraxis	 name of the axis choice for x (blank to keep current) 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setColorAxis(self, coloraxis, updateImmediately, plotIndex)


    def setSymbol(self, *args, **kwargs):
        """
        setSymbol(self, shape, size=2, color, fill, outline=False, updateImmediately=True, plotIndex=0, dataIndex=0)



        Summary
        	Sets the unflagged plot symbol

        Description

        Sets the unflagged plot symbol properties: shape, size, color, fill, 
        and outline.


        Input Parameters:
        	shape		 symbol shape (autoscaling, circle, square, diamond, pixel, nosymbol) autoscaling 
        	size		 size of the symbol in pts 2 
        	color		 color of the symbol, in hex (ex. '0000ff') 0000ff 
        	fill		 point fill type (fill, mesh1, mesh2, mesh3, no fill) fill 
        	outline		 sets outline on plotted points false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 
        	dataIndex	 the index of the data in an overplot to apply this change 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setSymbol(self, *args, **kwargs)


    def setFlaggedSymbol(self, *args, **kwargs):
        """
        setFlaggedSymbol(self, shape, size=2, color, fill, outline=False, updateImmediately=True, plotIndex=0, dataIndex=0)



        Summary
        	Sets the flagged plot symbol

        Description

        Sets the flagged plot symbol properties: shape, size, color, fill, 
        and outline.


        Input Parameters:
        	shape		 flagged symbol shape (autoscaling, circle, square, diamond, pixel, nosymbol) nosymbol 
        	size		 size of the flaggedsymbol in pts 2 
        	color		 color of the flagged symbol, in hex (ex. 'ff0000') ff0000 
        	fill		 flagged point fill type (fill, mesh1, mesh2, mesh3, no fill) fill 
        	outline		 sets outline on plotted flagged points false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 
        	dataIndex	 the index of the data in an overplot plot to apply this change 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setFlaggedSymbol(self, *args, **kwargs)


    def setConnect(self, *args, **kwargs):
        """
        setConnect(self, xconnector, timeconnector=False, updateImmediately=True, plotIndex=0)



        Summary
        	Whether to connect the points in the plot

        Description
        	 Sets the point connector and whether to connect dots along x-axis or time axis

        Input Parameters:
        	xconnector	 connector type (none, line, step) none 
        	timeconnector	 connect points in time rather than x-axis false 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setConnect(self, *args, **kwargs)


    def getColorAxis(self, plotIndex=0):
        """
        getColorAxis(self, plotIndex=0) -> string



        Summary
        	What data controls the colorizing?

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getColorAxis(self, plotIndex)


    def setFlagExtension(self, *args, **kwargs):
        """
        setFlagExtension(self, extend=False, correlation, channel=False, spw=False, antenna, time=False, scans=False, field=False, alternateSelection)



        Summary
        	Sets the flag extension parameters.

        Description

        Sets the flag extension parameters, using individual flags and values.  Takes
        effect next time flagging is done.


        Input Parameters:
        	extend		 whether to extend flags or not false 
        	correlation	 extend on correlation; one of: '', 'all', 'poln-dep' 
        	channel		 extend on channel false 
        	spw		 extend on spw false 
        	antenna		 extend on antenna; one of: '', 'all', antenna-based value 
        	time		 extend on time false 
        	scans		 extend on scans (only valid if time is true) false 
        	field		 extend on field (only valid if time is true) false 
        	alternateSelection	 alternate MS selection, in record form, or empty record for none 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setFlagExtension(self, *args, **kwargs)


    def setFlagExtensionRec(self, flagExtension):
        """
        setFlagExtensionRec(self, flagExtension)



        Summary
        	Sets the flag extension parameters.

        Description

        Sets the flag extension parameters, using a record (see
        PlotMSFlagging::toRecord()).  Takes effect next time flagging is done.


        Input Parameters:
        	flagExtension	 flag extension parameters, in record form 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setFlagExtensionRec(self, flagExtension)


    def getFlagExtension(self):
        """
        getFlagExtension(self) -> record *



        Summary
        	Gets the flag extension parameters.

        Description

        Gets the flag extension parameters as a record (see
        PlotMSFlagging::toRecord()).

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getFlagExtension(self)


    def locateInfo(self):
        """
        locateInfo(self) -> record *



        Summary
        	Locates points in a specified region.

        Description

        Locates points in all selected plot regions and returns their meta information as a record (see PlotMSFlagging::toRecord()).  If there are no selections, all plotted points are returned.

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_locateInfo(self)


    def getGridMajorShown(self, plotIndex=0):
        """
        getGridMajorShown(self, plotIndex=0) -> bool



        Summary
        	Gets state of visibililty of major grid lines

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getGridMajorShown(self, plotIndex)


    def getGridMinorShown(self, plotIndex=0):
        """
        getGridMinorShown(self, plotIndex=0) -> bool



        Summary
        	Gets state of visibililty of minor grid lines

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getGridMinorShown(self, plotIndex)


    def getGridMajorWidth(self, plotIndex=1):
        """
        getGridMajorWidth(self, plotIndex=1) -> int



        Summary
        	Gets width of major grid lines

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 1 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getGridMajorWidth(self, plotIndex)


    def getGridMinorWidth(self, plotIndex=1):
        """
        getGridMinorWidth(self, plotIndex=1) -> int



        Summary
        	Gets width of minor grid lines

        Description


        Input Parameters:
        	plotIndex	 Index of the plot (0-based). 1 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_getGridMinorWidth(self, plotIndex)


    def setGridParams(self, *args, **kwargs):
        """
        setGridParams(self, showmajorgrid=False, majorwidth=1, majorstyle, majorcolor, showminorgrid=False, minorwidth=1, minorstyle, minorcolor, updateImmediately=True, plotIndex=0)



        Summary
        	Set color, style for major and minor grid lines

        Description


        Input Parameters:
        	showmajorgrid	 Show major grid lines? false 
        	majorwidth	 Line width for major grid lines, pixels 1 
        	majorstyle	 Line style for major grid lines solid 
        	majorcolor	 Color of major grid lines B0B0B0 
        	showminorgrid	 Show minor grid lines? false 
        	minorwidth	 Line width for minor grid lines, pixels 1 
        	minorstyle	 Line style for minor grid lines solid 
        	minorcolor	 Color of minor grid lines C0CCE0 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setGridParams(self, *args, **kwargs)


    def setLegend(self, *args, **kwargs):
        """
        setLegend(self, showLegend=False, legendPosition, updateImmediately=True, plotIndex=0)



        Summary
        	Set whether or not to display a legend and the position of a legend.

        Description


        Input Parameters:
        	showLegend	 Show a legend with the plot? false 
        	legendPosition	 Location for the legend. upperright 
        	updateImmediately	 whether to apply this change immediately, IF the window is currently shown true 
        	plotIndex	 Index of the plot (0-based). 0 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setLegend(self, *args, **kwargs)


    def update(self):
        """
        update(self) -> bool



        Summary
        	Updates the running plotms with any un-applied changes.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_update(self)


    def save(self, plotfile, format, verbose=True, highres=False, dpi=-1, width=-1, height=-1):
        """
        save(self, plotfile, format, verbose=True, highres=False, dpi=-1, width=-1, height=-1) -> bool



        Summary
        	save plot to file

        Description
        	Save the plot to a file

        Input Parameters:
        	plotfile	 name of plot file 
        	format		 Format type, if not provided, attempt will be made to guess from plotfile extension 
        	verbose		 Use verbose format (txt only) true 
        	highres		 Use high resolution false 
        	dpi		 DPI of exported plot -1 
        	width		 width of exported plot -1 
        	height		 height of exported plot -1 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_save(self, plotfile, format, verbose, highres, dpi, width, height)


    def isDrawing(self):
        """
        isDrawing(self) -> bool



        Summary
        	Is the plot being drawn?

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_isDrawing(self)


    def isClosed(self):
        """
        isClosed(self) -> bool



        Summary
        	Has the plot received a closeEvent?

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_isClosed(self)


    def setShowGui(self, show):
        """
        setShowGui(self, show)



        Summary
        	Show a GUI supporting user interaction.

        Description


        Input Parameters:
        	show		 If true, provide a GUI supporting interaction, else operate in scripting mode. 

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_setShowGui(self, show)


    def clearPlots(self):
        """
        clearPlots(self)



        Summary
        	Remove existing plots so that new plots can replace them.

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_clearPlots(self)


    def killApp(self):
        """
        killApp(self)



        Summary
        	Kill plotms app using SIGTERM

        Description

        Example:

        --------------------------------------------------------------------------------

        """
        return _plotms.plotms_killApp(self)

plotms_swigregister = _plotms.plotms_swigregister
plotms_swigregister(plotms)

# This file is compatible with both classic and new-style classes.


